name: Build Packages

on:
  push:
    paths-ignore:
    - 'doc/**'
    - '**.md'
    - 'appveyor.yml'
    - '.travis.yml'
  pull_request:
    paths-ignore:
    - 'doc/**'
    - '**.md'
    - 'appveyor.yml'
    - '.travis.yml'

env:
  QT_VERSION: 5.15.2
  QTCREATOR_VERSION: 11.0.3
  VERSION: 2024.2
  THUNDER_RELEASE: ${{ startsWith(github.ref, 'refs/tags/2') }}

jobs:
  version:
    name: Determine Thunder version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      release: ${{ steps.get-version.outputs.release }}

    steps:
    - name: Get version
      id: get-version
      run: |
        if [[ "$THUNDER_RELEASE" == 'true' ]]; then echo "::set-output name=version::${VERSION}" ; fi
        if [[ "$THUNDER_RELEASE" != 'true' ]]; then echo "::set-output name=version::${VERSION}-SNAPSHOT" ; fi
        echo "::set-output name=release::${THUNDER_RELEASE}"
        
  linux:
    name: Linux
    runs-on: ubuntu-latest
    needs: version
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: 'thunder-engine/thunder'
        path: 'thunder'
  
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install binutils g++ libgl1-mesa-dev zlib1g-dev libzstd-dev p7zip-full xorg-dev libopenal-dev ninja-build cmake
        
    - name: Install Qt
      run: |
        sudo ./build/install-qt.sh --version ${QT_VERSION} qtbase qtmultimedia qtscript qtsvg qtimageformats qtgraphicaleffects qtquickcontrols2 qttools qtxmlpatterns qtdeclarative qtgamepad icu | tee -a $GITHUB_PATH
        sudo ./build/install-qt.sh --version ${QTCREATOR_VERSION} qtcreator | tee -a $GITHUB_PATH
  
    - name: Build Thunder
      run: |
        mkdir -pv tmp
        cd tmp
        cmake ../thunder -G "Ninja"
        ninja
        ninja install
        mkdir -pv release
        mv -v install-root release
        7z a -t7z ThunderEngine-linux-x86_64.7z release/install-root/
        
    - name: Upload Thunder
      uses: actions/upload-artifact@v2
      with:
        name: ThunderEngine-linux-x86_64.7z
        path: ThunderEngine-linux-x86_64.7z
  
  windows:
    name: Windows
    runs-on: windows-latest
    needs: version
    
    defaults:
      run:
        shell: bash
    
    env:
        MSVC: 2022
        QT_INSTALL_DIR: /c/Qt

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: 'thunder-engine/thunder'
        path: 'path'
        
    - name: Install Qt
      run: |
        echo "QT_PATH=$(./build/install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} qtbase qtmultimedia qtscript qtsvg qtimageformats qtgraphicaleffects qtquickcontrols2 qttools qtxmlpatterns qtdeclarative qtgamepad)" >> $GITHUB_ENV

    - name: Install CMake + Ninja
      run: |
        choco install -y cmake ninja
        
    - name: Build Thunder
      run: |
        mkdir -pv tmp
        cd tmp
        cmake ../thunder -G "Ninja"
        ninja
        ninja install
        mkdir -pv release
        mv -v install-root release
        7z a -t7z ThunderEngine-windows-x64.7z release/install-root
    
    - name: Upload Thunder
      uses: actions/upload-artifact@v2
      with:
        name: ThunderEngine-windows-x64.7z
        path: ThunderEngine-windows-x64.7z
    
  github:
    name: Upload to GitHub releases
    runs-on: ubuntu-latest
    needs: [version, linux, windows]

    if: github.repository == 'thunder-engine/thunder' && needs.version.outputs.release == 'true'

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ needs.version.outputs.version }}
          draft: true
          prerelease: false

      - name: Download Windows binaries
        id: download-windows
        uses: actions/download-artifact@v2
        with:
          name: ThunderEngine-windows-x64.7z

      - name: Download Linux binaries
        id: download-linux
        uses: actions/download-artifact@v2
        with:
          name: ThunderEngine-linux-x86_64.7z
     
      - name: Upload Windows
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ThunderEngine-windows-x64.7z
          asset_name: ThunderEngine-windows-x64.7z
          asset_content_type: application/x-7z-compressed

      - name: Upload Linux
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ThunderEngine-linux-x86_64.7z
          asset_name: ThunderEngine-linux-x86_64.7z
          asset_content_type: application/x-7z-compressed
        
